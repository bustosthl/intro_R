quarto install tinytex
????""
if (!require("pacman")) install.packages("pacman")
pacman::p_exists(R)
# install and/or load dependencies for the easter eggs
pacman::p_load(animation, rgdal, PBSmodelling, onion, mapview)
# install and/or load dependencies for the easter eggs
pacman::p_load(animation, rgdal, PBSmodelling, onion, mapview)
install.packages("tidyverse")
raw <- read.csv("data/ARG_elecciones.csv")
raw <- read.csv("data/ARG_elecciones.csv")
raw
data <- read_excel("data/ARG_elecciones.csv")
install.packages("tidyverse") # instalamos el conjunto de librerías que componen la colección tidyverse
library(tidyverse) # cargamos las funciones para poder utilizarlas
install.packages("tidyverse")
data <- read.csv("data/ARG_elecciones.csv")
data
data <- read_excel("data/ARG_elecciones.csv")
data <- read_excel("data/ARG_elecciones.xlsx")
install.packages("readxl")
data <- read_excel("data/ARG_elecciones.xlsx")
library(tidyverse) # cargamos las funciones para poder utilizarlas
data <- read_excel("data/ARG_elecciones.xlsx")
data <- read_csv("data/ARG_elecciones.csv")
data
data <- read_excel("data/ARG_elecciones.xlsx")
install.packages("readxl")
data <- read_excel("data/ARG_elecciones.xlsx")
library(readxl)
data <- read_excel("data/ARG_elecciones.xlsx")
data
class(42)
class(data)
class("cadena de texto")
upper("cadena de texto")
toupper("cadena de texto")
dim(data)
# aplicamos operaciones
42 * 42
# qué pasa si no respetamos la clase
"cadena de texto" * "cadena"
dim(42)
toupper(data)
info(data)
summary(data)
describe(data)
glimpse(data)
dim(data)
summary(data)
data
data %>%
filter(Partido == "Blanco")
data %>%
filter(Partido == "Blanco")
data %>%
filter(Partido == "BLANCO")
data %>%
filter(Partido == "BLANCO") %>%
group_by(Elecciones)
data %>%
filter(Partido == "BLANCO") %>%
group_by(Elecciones) %>%
summarise(sum(Votos))
data %>%
filter(Partido == "BLANCO") %>%
group_by(Elecciones) %>%
summarise(Votos = sum(Votos),
Electores = sum(electores))
data
data %>%
filter(Partido == "BLANCO") %>%
group_by(Elecciones) %>%
summarise(votos = sum(Votos),
votantes = sum(votantes))
data %>%
filter(Partido == "BLANCO") %>%
group_by(Elecciones) %>%
summarise(blanco = sum(Votos),
votantes = sum(votantes),
blanco_per = blanco/votantes)
tabla_blanco %>%
ggplot()
tabla_blanco <- data %>%
filter(Partido == "BLANCO") %>% # filtramos votos en blanco
group_by(Elecciones) %>%  # agrupamos por elecciones
summarise(blanco = sum(Votos), # sumamos votos en blanco
votantes = sum(votantes), #sumamos votantes
blanco_per = blanco/votantes) # calculamos el porcentaje
tabla_blanco # mostramos el resultado
tabla_blanco %>%
ggplot()
tabla_blanco %>%
ggplot()+
geom_bar()
tabla_blanco %>%
ggplot()+
geom_col()
tabla_blanco
tabla_blanco %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()
tabla_blanco %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_bar()
col
tabla_blanco %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()
tabla_blanco %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col() %>%
coord_flip()
tabla_blanco %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()
orden <- c("PASO 2011", "GENERALES 2011",
"PASO 2013", "GENERALES 2013",
"PASO 2015", "GENERALES 2015","BALLOTAGE 2015",
"PASO 2017", "GENERALES 2017",
"PASO 2019", "GENERALES 2019",
"PASO 2021", "GENERALES 2021",
"PASO 2023", "GENERALES 2023",)
orden <- c("PASO 2011", "GENERALES 2011",\
"PASO 2013", "GENERALES 2013",
orden <- c("PASO 2011", "GENERALES 2011",
"PASO 2013", "GENERALES 2013",
"PASO 2015", "GENERALES 2015","BALLOTAGE 2015",
"PASO 2017", "GENERALES 2017",
"PASO 2019", "GENERALES 2019",
"PASO 2021", "GENERALES 2021",
"PASO 2023", "GENERALES 2023","BALLOTAGE 2023")
?factor
?class
?dim
?factor
tabla_blanco$elecciones <- factor(tabla_blanco$elecciones, orden)
tabla_blanco$elecciones <- factor(tabla_blanco$elecciones, levels=orden)
tabla_blanco %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()
tabla_blanco$elecciones <- factor(tabla_blanco$elecciones, levels=orden)
tabla_blanco$elecciones = factor(tabla_blanco$elecciones, levels=orden)
tabla_blanco$Elecciones
tabla_blanco$Elecciones = factor(tabla_blanco$Elecciones, levels=orden)
tabla_blanco %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()
tabla_blanco %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()+
coor_flip()
tabla_blanco %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()
tabla_blanco %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()+
theme(axis.text.x=element_text(angle=90, hjust=1))
tabla_blanco %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()+
theme(axis.text.x=element_text(angle=45, hjust=1))
tabla_blanco %>%
dropna()
tabla_blanco %>%
drop_na()+
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()+
theme(axis.text.x=element_text(angle=45, hjust=1))
?drop_na
tabla_blanco %>%
drop_na(blanco_per)+
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()+
theme(axis.text.x=element_text(angle=45, hjust=1))
tabla_blanco
rop
drop_na(tabla_blanco)
tabla_blanco %>%
drop_na()
tabla_blanco %>%
drop_na()+
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()+
theme(axis.text.x=element_text(angle=45, hjust=1))
tabla_blanco %>%
drop_na() %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()+
theme(axis.text.x=element_text(angle=45, hjust=1))
table(data$Partido)
tabla_blanco %>%
drop_na() %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()+
theme_minimal()+
theme(axis.text.x=element_text(angle=45, hjust=1))
tabla_blanco %>%
drop_na() %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()+
theme_minimal()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional")
tabla_blanco %>%
drop_na() %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()+
theme_minimal()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional",
x="xlab")
tabla_blanco %>%
drop_na() %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()+
theme_minimal()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title="% de voto en blanco en elecciones ejecutivas", subtitle="total nacional",
x="", y="%")
tabla_blanco %>%
drop_na() %>%
ggplot(aes(x=Elecciones, y=blanco_per))+
geom_col()+
theme_minimal()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
labs(title="% de voto en blanco en elecciones ejecutivas", subtitle="total nacional",
x="", y="")
tabla_blanco$Elecciones
separate(tabla_blanco$Elecciones)
separate(str(tabla_blanco$Elecciones))
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=Elecciones, y=blanco_per))+ # indicamos qué variables vamos a utilizar
geom_col()+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=Elecciones, y=blanco_per))+ # indicamos qué variables vamos a utilizar
geom_col()+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_y_continuos(labels=percent)
library(scales)
library(scales)
# cambiamos el tipo de la columna para que tenga un orden
orden <- c("PASO 2011", "GENERALES 2011",
"PASO 2015", "GENERALES 2015","BALLOTAGE 2015",
"PASO 2019", "GENERALES 2019",
"PASO 2023", "GENERALES 2023","BALLOTAGE 2023")
tabla_blanco$Elecciones = factor(tabla_blanco$Elecciones, levels=orden)
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=Elecciones, y=blanco_per))+ # indicamos qué variables vamos a utilizar
geom_col()+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_y_continuos(labels=percent)
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=Elecciones, y=blanco_per))+ # indicamos qué variables vamos a utilizar
geom_col()+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_y_continuous(labels=percent)
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=Elecciones, y=blanco_per))+ # indicamos qué variables vamos a utilizar
geom_col()+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_bw()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_y_continuous(labels=percent) # indicamos que el eje Y es un porcentaje
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=Elecciones, y=blanco_per))+ # indicamos qué variables vamos a utilizar
geom_col()+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_classic()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_y_continuous(labels=percent) # indicamos que el eje Y es un porcentaje
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=Elecciones, y=blanco_per))+ # indicamos qué variables vamos a utilizar
geom_col()+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_y_continuous(labels=percent) # indicamos que el eje Y es un porcentaje
tabla_blanco <- data %>%
filter(Partido == "BLANCO") %>% # filtramos votos en blanco
group_by(Elecciones) %>%  # agrupamos por elecciones
summarise(blanco = sum(Votos), # sumamos votos en blanco
votantes = sum(votantes), #sumamos votantes
blanco_per = blanco/votantes) %>% # calculamos el porcentaje
mutate(anio = Elecciones)
tabla_blanco # mostramos el resultado
tabla_blanco <- data %>%
filter(Partido == "BLANCO") %>% # filtramos votos en blanco
group_by(Elecciones) %>%  # agrupamos por elecciones
summarise(blanco = sum(Votos), # sumamos votos en blanco
votantes = sum(votantes), #sumamos votantes
blanco_per = blanco/votantes) %>% # calculamos el porcentaje
mutate(anio = separate(Elecciones))
tabla_blanco <- data %>%
filter(Partido == "BLANCO") %>% # filtramos votos en blanco
group_by(Elecciones) %>%  # agrupamos por elecciones
summarise(blanco = sum(Votos), # sumamos votos en blanco
votantes = sum(votantes), #sumamos votantes
blanco_per = blanco/votantes) %>% # calculamos el porcentaje
mutate(anio = separate(Elecciones))
tabla_blanco <- data %>%
filter(Partido == "BLANCO") %>% # filtramos votos en blanco
group_by(Elecciones) %>%  # agrupamos por elecciones
summarise(blanco = sum(Votos), # sumamos votos en blanco
votantes = sum(votantes), #sumamos votantes
blanco_per = blanco/votantes) %>% # calculamos el porcentaje
mutate(anio = separate_(Elecciones))
tabla_blanco <- data %>%
filter(Partido == "BLANCO") %>% # filtramos votos en blanco
group_by(Elecciones) %>%  # agrupamos por elecciones
summarise(blanco = sum(Votos), # sumamos votos en blanco
votantes = sum(votantes), #sumamos votantes
blanco_per = blanco/votantes) %>% # calculamos el porcentaje
mutate(anio = str_sub(Elecciones))
tabla_blanco # mostramos el resultado
tabla_blanco <- data %>%
filter(Partido == "BLANCO") %>% # filtramos votos en blanco
group_by(Elecciones) %>%  # agrupamos por elecciones
summarise(blanco = sum(Votos), # sumamos votos en blanco
votantes = sum(votantes), #sumamos votantes
blanco_per = blanco/votantes) %>% # calculamos el porcentaje
mutate(anio = str_sub(Elecciones,-4))
tabla_blanco # mostramos el resultado
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=Elecciones, y=blanco_per, color=anio))+ # indicamos qué variables vamos a utilizar
geom_col()+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_y_continuous(labels=percent) # indicamos que el eje Y es un porcentaje
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=Elecciones, y=blanco_per, fill=anio))+ # indicamos qué variables vamos a utilizar
geom_col()+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_y_continuous(labels=percent) # indicamos que el eje Y es un porcentaje
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=Elecciones, y=blanco_per), fill=anio)+ # indicamos qué variables vamos a utilizar
geom_col()+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_y_continuous(labels=percent) # indicamos que el eje Y es un porcentaje
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=Elecciones, y=blanco_per, fill=anio))+ # indicamos qué variables vamos a utilizar
geom_col()+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_y_continuous(labels=percent) # indicamos que el eje Y es un porcentaje
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=factor(Elecciones), y=blanco_per, fill=anio))+ # indicamos qué variables vamos a utilizar
geom_col()+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_y_continuous(labels=percent) # indicamos que el eje Y es un porcentaje
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=arrange(Elecciones), y=blanco_per, fill=anio))+ # indicamos qué variables vamos a utilizar
geom_col()+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_y_continuous(labels=percent) # indicamos que el eje Y es un porcentaje
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=Elecciones, y=blanco_per, fill=anio))+ # indicamos qué variables vamos a utilizar
geom_col(stat="identity")+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_y_continuous(labels=percent) # indicamos que el eje Y es un porcentaje
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=Elecciones, y=blanco_per, fill=anio))+ # indicamos qué variables vamos a utilizar
geom_col(stat="identity", show.legend=FALSE)+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_y_continuous(labels=percent) # indicamos que el eje Y es un porcentaje
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=Elecciones, y=blanco_per, fill=anio))+ # indicamos qué variables vamos a utilizar
geom_col(show.legend=FALSE)+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_y_continuous(labels=percent) # indicamos que el eje Y es un porcentaje
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=factor(Elecciones,orden), y=blanco_per, fill=anio))+ # indicamos qué variables vamos a utilizar
geom_col(show.legend=FALSE)+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_y_continuous(labels=percent) # indicamos que el eje Y es un porcentaje
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=factor(Elecciones,orden), y=blanco_per, fill=anio))+ # indicamos qué variables vamos a utilizar
geom_col(show.legend=FALSE)+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_fill_brewer(palette="Set2")+
scale_y_continuous(labels=percent) # indicamos que el eje Y es un porcentaje
#install.packages("tidyverse") # instalamos el conjunto de librerías que componen la colección tidyverse
library(tidyverse) # cargamos las funciones para poder utilizarlas
data <- read_csv("data/ARG_elecciones.csv")
data
#install.packages("readxl") # en caso de error, instalar y cargar librería readxl
library(readxl)
data <- read_excel("data/ARG_elecciones.xlsx")
data
# consultamos la clase de cada uno de los tres objetos
class(42)
class(data)
class("cadena de texto")
# aplicamos operaciones
42 * 42
dim(data)
toupper("cadena de texto") # función para pasar a mayúscula una cadena de texto
# qué pasa si no respetamos la clase
# "cadena de texto" * "cadena de texto"
# dim(42)
?dim
glimpse(data) # exploramos nombres de columnas, tipo de datos, algunos primeros valores
dim(data) # cantidad de filas y columnas
summary(data) # devuelve el tipo de datos que hay dentro de las columnas y, para aquellas columnas de tipo numéricas, devuelve algunas métricas de posición como valores mínimos, máximos, mediana, promedio.
tabla_blanco <- data %>%
filter(Partido == "BLANCO") %>% # filtramos votos en blanco
group_by(Elecciones) %>%  # agrupamos por elecciones
summarise(blanco = sum(Votos), # sumamos votos en blanco
votantes = sum(votantes), #sumamos votantes
blanco_per = blanco/votantes) %>% # calculamos el porcentaje
mutate(anio = str_sub(Elecciones,-4)) # creamos una nueva columna que indica el año de la elección
tabla_blanco # mostramos el resultado
library(scales)
# cambiamos el tipo de la columna para que tenga un orden
orden <- c("PASO 2011", "GENERALES 2011",
"PASO 2015", "GENERALES 2015","BALLOTAGE 2015",
"PASO 2019", "GENERALES 2019",
"PASO 2023", "GENERALES 2023","BALLOTAGE 2023")
#tabla_blanco$Elecciones = factor(tabla_blanco$Elecciones, levels=orden)
tabla_blanco %>%
drop_na() %>% # eliminamos elecciones sin valores
ggplot(aes(x=factor(Elecciones,orden), y=blanco_per, fill=anio))+ # indicamos qué variables vamos a utilizar
geom_col(show.legend=FALSE)+ # indicamos el tipo de gráfico. Geom_ es el prefijo para ver los distintos gráficos que pueden usarse
theme_minimal()+
theme(axis.text.x=element_text(angle=30, hjust=1))+ # rotamos las etiquetas de los ejes para que sean legibles
labs(title="% de voto en blanco en elecciones ejecutivas",
subtitle="total nacional", x="", y="")+
scale_fill_brewer(palette="Set2")+ # elegimos una paleta para el argumento "fill"
scale_y_continuous(labels=percent) # indicamos que el eje Y es un porcentaje
